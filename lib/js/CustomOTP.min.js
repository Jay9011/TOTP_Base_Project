class OTPManager{constructor(formSelector,fieldSelector,options={}){this.form=document.querySelector(formSelector);this.fields=this.form.querySelectorAll(fieldSelector);this.options=Object.assign({invalidClass:"is-invalid",onInvalid:()=>{}},options);this.initFields()}initFields(){this.fields.forEach((field,index)=>{field.addEventListener("input",e=>this.handleInput(e,index));field.addEventListener("keydown",e=>this.handleKeydown(e,index));field.addEventListener("focus",()=>this.setInvalid(false));field.addEventListener("paste",e=>this.handlePaste(e,index))})}handleInput(e,index){if(e.target.value.length===1&&index<this.fields.length-1){this.fields[index+1].focus()}this.setInvalid(false)}handleKeydown(e,index){if(e.key==="Backspace"&&index>0&&e.target.value===""){this.fields[index-1].focus();this.setInvalid(false)}}handlePaste(e,index){e.preventDefault();const pastedData=e.clipboardData.getData("text").slice(0,this.fields.length-index);pastedData.split("").forEach((char,i)=>{if(index+i<this.fields.length){this.fields[index+i].value=char}});const lastFilledIndex=Math.min(index+pastedData.length,this.fields.length)-1;this.fields[lastFilledIndex].focus()}getOTPValue(){return Array.from(this.fields).map(input=>input.value).join("")}setInvalid(isInvalid){this.fields.forEach(field=>{field.classList.toggle(this.options.invalidClass,isInvalid)});if(isInvalid){this.options.onInvalid()}}focus(index){this.fields[index].focus()}AllClear(){this.fields.forEach(field=>field.value="");this.focus(0)}}function createOTPManager(formSelector,fieldSelector,options={}){return new OTPManager(formSelector,fieldSelector,options)}